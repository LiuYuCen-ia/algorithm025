var isPowerOfTow = function(n) {
    // 时间复杂度  O(N) ，空间复杂度 O(1)
    // if(n <= 0) return false;
    // // 或者 while(n % 2 === 0) n & 1 等同于 n % 2 但是 比 n % 2 快
    // while((n & 1) == 0) {
    //     n = n / 2;
    // }
    // // 如果最后相除还剩  1 的话  说明是 n 是 2 的 x 次幂得到的数
    // return n == 1;
// 方法二 ： 位运算  打掉最后一个 ，(n & (n - 1) 清零最低位 的 1 ，如果最低位是  ; 10001 = 16 , 15 = 01111   17 & 15 = 00001 = 1 ,相同 取相同 ，相反 取 0
// 32 = 100000 =   30 = 11110  29 = 11101  30 & 29 = 11100 != 0
    return n > 0 && (n & (n - 1)) == 0
}
console.log(isPowerOfTow(16))